1. put your training data to the folder named"data". The training data is which you want to use to build a dictionary.
2. Put  your test data to the folder named "testdata". The test data is which one you want to generate the representation. 

!!!Warning:
!!!test data can only be one!!!!! This means you can only put one image in the folder "testdata".
!!!all the data's name must be "xxxxxx.jpg", x must be number.

Now you put your data in the right folder, then try to use code to run.

1. Open the folder named "code". 

2. Firstly, try to run "descriptor.py". 
   
   This code is to generate bag of words.
   In this code, I firstly generate descriptors using sift.
   Then divide them into 100 clusters using k-means.
   The centers of these clusters are just the bag of words. 
   I saved the result, which are centers of those clusters, in the
   "center.npy".

3. Secondly, try to run "IDF.py".
   
   This code is to generate the idf weighting factor.
   In this code, for every word i, calculate ti, which is the number of
   documents where this word appears, and then calculate the total number of
   documents D. Then calculate IDF by using log(D/ti) use which are just the
   idf.
   I saved the idf in "idf.npy".

4. Thirdly, try to run "generate_representations.py".
   
   This code is to generate the representation of each test image.
   The representation will be generated by:
   1) comparing the descriptors of this test image with words(centers) using
      the similarity function, and then get a vector which is the
      words(labels) of each descriptors.
   2) compute tf of 1)'s vector.
   3) compute tf-idf by calculate tf*idf.

   The representation of the image will be tf-idf which we compute in 3). And 
   then print it. You can then see the representation.

5. If you want to get the inverted-index, please run "inverted_index.py",
   Input the word, like 10, which you want to get inverted-index. Then you 
   get all images's name which have the word 10.
   Warning!!!!this word should be in 0-99. Because we only generate 100
   words(centers) in stage 1.

